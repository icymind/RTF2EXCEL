require("chai").should()
const path = require("path")
// const assert = require("assert")
const {extractFromFile} = require(path.join(__dirname, "../extract.js"))
const {writeToWorkbook, createWorkbook} = require(path.join(__dirname, "../excel.js"))

describe("test wirte to excel", function() {
  it("test file: multi nonconformity details && long category title", function() {
    const rtf = extractFromFile(path.join(__dirname, "multi-nonconformity-details.rtf"))
    // console.log(rtf["nonconformity details"])
    const sheetName = "test"
    let workbook = createWorkbook(sheetName)
    let sheet = workbook.getWorksheet(sheetName)
    writeToWorkbook(workbook, sheetName, rtf)

    let row = sheet.getRow(2)


    row.getCell("Parse Error").value.should.equal("")
    row.getCell("Season").value.should.equal("F13")
    // row.getCell("department").value.should.equal("35 - Packs")
    row.getCell("REI Style Number").value.should.equal("854042")
    // row.getCell("auditlevel").value.should.equal("Normal")
    row.getCell("Auditor").value.should.equal("Asia PQA6")
    row.getCell("Product Name").value.should.equal("Traverse 30")
    row.getCell("Audit Quality Level").value.should.equal("2.5")
    row.getCell("Audit Lot Size").value.should.equal("160")
    row.getCell("Production Status").value.should.equal("Supplier Pre-ship")
    row.getCell("Factory").value.should.equal("KANAAN SAIGON CO. LTD")
    row.getCell("Vendor").value.should.equal("KAANAN CO., LTD.")
    row.getCell("GA Product Number").value.should.equal("15978")
    row.getCell("Audit Sample Quantity").value.should.equal("13")
    row.getCell("PO Number").value.should.equal("4500947614,627")
    row.getCell("Audit Reject Quantity").value.should.equal("2")
    row.getCell("Product Disposition Details").value.should.equal("Accept as is")
    row.getCell("REI Spec Inaccuracy Major").value.should.equal(0)
    row.getCell("REI Spec Inaccuracy Minor").value.should.equal(0)
    row.getCell("REI Spec Inaccuracy RSI").value.should.equal(0)
    row.getCell("REI Spec Inaccuracy Critical").value.should.equal(0)
    row.getCell("Trim/Findings Major").value.should.equal(1)
    row.getCell("Trim/Findings Minor").value.should.equal(0)
    row.getCell("Trim/Findings RSI").value.should.equal(0)
    row.getCell("Trim/Findings Critical").value.should.equal(0)
  })

  it("test file: multi disposition details && long category title", function() {
    const rtf = extractFromFile(path.join(__dirname, "multi-disposition-details.rtf"))
    const sheetName = "test"
    let workbook = createWorkbook(sheetName)
    let sheet = workbook.getWorksheet(sheetName)
    writeToWorkbook(workbook, sheetName, rtf)
    const row = sheet.lastRow

    row.getCell("Parse Error").value.should.equal("")
    row.getCell("Season").value.should.equal("S13")
    // row.getCell("department").value.should.equal("35 - Packs")
    row.getCell("REI Style Number").value.should.equal("844567")
    // row.getCell("auditlevel").value.should.equal("Normal")
    row.getCell("Auditor").value.should.equal("Asia PQA2")
    row.getCell("Product Name").value.should.equal("M Pulaski Short")
    row.getCell("Audit Quality Level").value.should.equal("4.0")
    row.getCell("Audit Lot Size").value.should.equal("579")
    row.getCell("Production Status").value.should.equal("Supplier Pre-ship")
    row.getCell("Factory").value.should.equal("NANTONG XINLAI SILK GARMENTS CO., LTD.")
    row.getCell("Vendor").value.should.equal("TREASURE WILL, HK")
    row.getCell("GA Product Number").value.should.equal("14216")
    row.getCell("Audit Sample Quantity").value.should.equal("20")
    row.getCell("PO Number").value.should.equal("4500771596")
    row.getCell("Audit Reject Quantity").value.should.equal("3")
    row.getCell("Product Disposition Details").value.should.equal("Vendor 100% Sort/Repair then Ship; Future Factory Audit Required; DC Receipt Audit Required")
    row.getCell("Workmanship Major").value.should.equal(3)
    row.getCell("Workmanship Minor").value.should.equal(0)
    row.getCell("Workmanship RSI").value.should.equal(0)
    row.getCell("Workmanship Critical").value.should.equal(0)
  })

})
